Card widget:

The Card widget is a material design component used to create a container with rounded corners, elevation (shadow), and padding.

Common properties:

| Property       | Type                 | Description                                            |
| -------------- | -------------------- | ------------------------------------------------------ |
| `child`        | `Widget`             | Content inside the card (e.g., `Text`, `Column`, etc.) |
| `color`        | `Color`              | Background color of the card                           |
| `elevation`    | `double`             | Shadow depth (higher = more shadow)                    |
| `margin`       | `EdgeInsetsGeometry` | Outer margin of the card                               |
| `shape`        | `ShapeBorder`        | Shape of the card (e.g., rounded corners)              |
| `shadowColor`  | `Color`              | Color of the cardâ€™s shadow                             |
| `clipBehavior` | `Clip`               | How to clip child content (e.g., for images)           |

Positional widget:

Positional widgets are widgets that allow you to position children relative to a parent or within a specific layout, such as inside a Stack.

| Parameter | Description                        |
| --------- | ---------------------------------- |
| `top`     | Distance from the top of the Stack |
| `bottom`  | Distance from the bottom           |
| `left`    | Distance from the left             |
| `right`   | Distance from the right            |
| `width`   | Fixed width of the child           |
| `height`  | Fixed height of the child          |

Stack:

The Stack widget in Flutter allows you to place widgets on top of each other, like layers. 
It's often used when you want elements to overlap or be positioned absolutely within a container.

| Property       | Description                                                                     |
| -------------- | ------------------------------------------------------------------------------- |
| `alignment`    | Aligns non-positioned children inside the stack (e.g. `Alignment.center`)       |
| `clipBehavior` | Controls how overflowing content is clipped (e.g. `Clip.none`, `Clip.hardEdge`) |
| `fit`          | How children are sized: `loose` (default) or `expand`                           |

Divider:

The Divider widget in Flutter is used to create a horizontal line that visually separates content in a layout.
It's commonly used in lists, menus, and cards to break sections apart.

| Property    | Description                                                                |
| ----------- | -------------------------------------------------------------------------- |
| `color`     | Color of the line (e.g. `Colors.black`)                                    |
| `thickness` | Thickness of the line (default is 0.0)                                     |
| `indent`    | Empty space to the **left** of the divider                                 |
| `endIndent` | Empty space to the **right** of the divider                                |
| `height`    | Total vertical space the divider takes (including spacing above and below) |

CircularAvatar:

CircleAvatar widget comes built-in with the flutter SDK.
It is simply a circle in which we can add background color, background image, or just some text. 
It usually represents a user with his image or with his initials.

| Property          | Description                                      |
| ----------------- | ------------------------------------------------ |
| `radius`          | Sets the size of the avatar (default is 20)      |
| `backgroundColor` | Background color if no image is set              |
| `foregroundColor` | Text/icon color if child is provided             |
| `backgroundImage` | Set image from assets or network                 |
| `child`           | Widget inside the circle (e.g. initials or icon) |



