1. Form
The Form widget is a container for form fields. It helps manage form validation and state.

ðŸ”¸ Properties:
key: Used to uniquely identify the form and allow validation or saving.

autovalidateMode: Controls when the form should auto-validate. Options:

AutovalidateMode.disabled

AutovalidateMode.always

AutovalidateMode.onUserInteraction

child: Usually a Column or ListView that contains form fields.

2. TextFormField
This is the most commonly used field in forms for text input. It's a TextField with built-in validation.

ðŸ”¸ Properties:
controller: Controls the text being edited.

initialValue: The initial text field value.

decoration: UI decoration (like labels, icons, etc.).

validator: A function that returns an error string if validation fails.

onSaved: Called when FormState.save() is triggered.

keyboardType: Type of keyboard (e.g., TextInputType.emailAddress).

obscureText: For hiding input (e.g., passwords).

2. TextFormField
This is the most commonly used field in forms for text input. It's a TextField with built-in validation.

ðŸ”¸ Properties:
controller: Controls the text being edited.

initialValue: The initial text field value.

decoration: UI decoration (like labels, icons, etc.).

validator: A function that returns an error string if validation fails.

onSaved: Called when FormState.save() is triggered.

keyboardType: Type of keyboard (e.g., TextInputType.emailAddress).

obscureText: For hiding input (e.g., passwords).

3. Managing Form State
Use a GlobalKey<FormState> to manage a form's state:

Methods:
validate(): Validates all fields and returns true if all are valid.

save(): Triggers onSaved on every field.

reset(): Resets all fields.

dart
Copy
Edit

//Radio

The Radio widget in Flutter is used to create radio buttons â€” a UI element that allows users to select only one option from a set.

| Property      | Description                                                                                       |
| ------------- | ------------------------------------------------------------------------------------------------- |
| `value`       | The value this radio button represents.                                                           |
| `groupValue`  | The currently selected value for the radio group. If it matches `value`, this button is selected. |
| `onChanged`   | Callback triggered when the user selects this radio button.                                       |
| `activeColor` | The color of the radio when selected.                                                             |
| `toggleable`  | If `true`, allows the radio to be deselected when tapped again.                                   |
| `fillColor`   | A MaterialStateProperty that defines the fill color based on the widget's state.                  |
| `autofocus`   | Whether the radio should focus itself initially.                                                  |

// RadioListTile:

The RadioListTile widget in Flutter is a higher-level widget that combines a Radio button with a ListTile. 
It simplifies the creation of radio button groups with labels and optional secondary content like icons or subtitles.

| Property            | Type                  | Description                                                        |
| ------------------- | --------------------- | ------------------------------------------------------------------ |
| `value`             | `T`                   | The value associated with this tile.                               |
| `groupValue`        | `T`                   | The selected value for the entire radio group.                     |
| `onChanged`         | `ValueChanged<T?>`    | Called when the user selects the tile.                             |
| `title`             | `Widget`              | The primary text of the tile.                                      |
| `subtitle`          | `Widget?`             | Secondary text shown below the title.                              |
| `secondary`         | `Widget?`             | Optional widget displayed at the trailing edge (e.g., an icon).    |
| `activeColor`       | `Color?`              | Color when selected.                                               |
| `toggleable`        | `bool`                | If `true`, allows deselecting the currently selected radio button. |
| `tileColor`         | `Color?`              | Background color of the tile.                                      |
| `selectedTileColor` | `Color?`              | Tile color when selected.                                          |
| `selected`          | `bool`                | Whether the tile is visually selected (e.g., changes text style).  |
| `shape`             | `ShapeBorder?`        | Custom border for the tile.                                        |
| `contentPadding`    | `EdgeInsetsGeometry?` | Padding inside the tile.                                           |



